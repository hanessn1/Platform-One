spring.application.name=gateway
spring.main.web-application-type=reactive
server.port=8085

# Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# zipkin
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

# gateway routing and rate limiting
# auth service (no rate limit)
spring.cloud.gateway.server.webflux.routes[0].id=auth
spring.cloud.gateway.server.webflux.routes[0].uri=lb://user
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/auth/**

# user service (10 req/sec)
spring.cloud.gateway.server.webflux.routes[1].id=user
spring.cloud.gateway.server.webflux.routes[1].uri=lb://user
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/user/**
spring.cloud.gateway.server.webflux.routes[1].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[1].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[1].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.routes[1].filters[0].args.redis-rate-limiter.burstCapacity=20

# train service (10 req/sec)
spring.cloud.gateway.server.webflux.routes[2].id=train
spring.cloud.gateway.server.webflux.routes[2].uri=lb://train
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/train/**
spring.cloud.gateway.server.webflux.routes[2].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[2].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[2].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.routes[2].filters[0].args.redis-rate-limiter.burstCapacity=20

# route service (10 req/sec)
spring.cloud.gateway.server.webflux.routes[3].id=route
spring.cloud.gateway.server.webflux.routes[3].uri=lb://train
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/route/**
spring.cloud.gateway.server.webflux.routes[3].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[3].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[3].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.routes[3].filters[0].args.redis-rate-limiter.burstCapacity=20

# station service (10 req/sec)
spring.cloud.gateway.server.webflux.routes[4].id=station
spring.cloud.gateway.server.webflux.routes[4].uri=lb://train
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/station/**
spring.cloud.gateway.server.webflux.routes[4].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[4].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[4].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.routes[4].filters[0].args.redis-rate-limiter.burstCapacity=20

# schedule service (10 req/sec)
spring.cloud.gateway.server.webflux.routes[5].id=schedule
spring.cloud.gateway.server.webflux.routes[5].uri=lb://schedule
spring.cloud.gateway.server.webflux.routes[5].predicates[0]=Path=/schedule/**
spring.cloud.gateway.server.webflux.routes[5].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[5].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[5].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.routes[5].filters[0].args.redis-rate-limiter.burstCapacity=20

# payment service (5 req/sec)
spring.cloud.gateway.server.webflux.routes[6].id=payment
spring.cloud.gateway.server.webflux.routes[6].uri=lb://payment
spring.cloud.gateway.server.webflux.routes[6].predicates[0]=Path=/payment/**
spring.cloud.gateway.server.webflux.routes[6].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[6].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[6].filters[0].args.redis-rate-limiter.replenishRate=5
spring.cloud.gateway.server.webflux.routes[6].filters[0].args.redis-rate-limiter.burstCapacity=10

# transaction service (5 req/sec)
spring.cloud.gateway.server.webflux.routes[7].id=transaction
spring.cloud.gateway.server.webflux.routes[7].uri=lb://payment
spring.cloud.gateway.server.webflux.routes[7].predicates[0]=Path=/transaction/**
spring.cloud.gateway.server.webflux.routes[7].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[7].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[7].filters[0].args.redis-rate-limiter.replenishRate=5
spring.cloud.gateway.server.webflux.routes[7].filters[0].args.redis-rate-limiter.burstCapacity=10

# wallet service (5 req/sec)
spring.cloud.gateway.server.webflux.routes[8].id=wallet
spring.cloud.gateway.server.webflux.routes[8].uri=lb://payment
spring.cloud.gateway.server.webflux.routes[8].predicates[0]=Path=/wallet/**
spring.cloud.gateway.server.webflux.routes[8].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[8].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[8].filters[0].args.redis-rate-limiter.replenishRate=5
spring.cloud.gateway.server.webflux.routes[8].filters[0].args.redis-rate-limiter.burstCapacity=10

# booking service (10 req/sec)
spring.cloud.gateway.server.webflux.routes[9].id=booking
spring.cloud.gateway.server.webflux.routes[9].uri=lb://booking
spring.cloud.gateway.server.webflux.routes[9].predicates[0]=Path=/booking/**
spring.cloud.gateway.server.webflux.routes[9].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[9].filters[0].args.key-resolver=#{@userOrIpKeyResolver}
spring.cloud.gateway.server.webflux.routes[9].filters[0].args.redis-rate-limiter.replenishRate=5
spring.cloud.gateway.server.webflux.routes[9].filters[0].args.redis-rate-limiter.burstCapacity=10

spring.cloud.gateway.server.webflux.routes[10].id=eureka-server
spring.cloud.gateway.server.webflux.routes[10].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[10].predicates[0]=Path=/eureka/main
spring.cloud.gateway.server.webflux.routes[10].filters[0]=SetPath=/

spring.cloud.gateway.server.webflux.routes[11].id=eureka-server-static
spring.cloud.gateway.server.webflux.routes[11].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[11].predicates[0]=Path=/eureka/**

# Actuator config
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.info.env.enabled=true
management.endpoint.metrics.access=read-only
management.endpoint.prometheus.access=read-only
info.app.name=${spring.application.name}
info.app.version=@project.version@
info.app.description=Microservice for ${spring.application.name}

# Logging
logging.level.root=INFO
logging.level.com.platformone.gateway=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.data.redis=DEBUG

# jwt
spring.app.jwtSecret=mySecretKey9t834htg92hfo824ht824hfu4hfi24gfyu2ef874gtfuybfu
spring.app.jwtExpirationMs=30000000