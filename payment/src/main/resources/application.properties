spring.application.name=payment
server.port=8083

# h2 database config
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:test
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true

# log
logging.level.com.platformone.payment=DEBUG
logging.level.org.springframework.web=DEBUG

# kafka
spring.kafka.bootstrap-servers=localhost:9092
# producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
# consumer
spring.kafka.consumer.group-id=payment-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages="*"
spring.kafka.consumer.properties.spring.json.value.default.type=com.platformone.payment.events.BookingCreatedEvent
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Eureka client
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
